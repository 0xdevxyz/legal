# Production SSL Configuration for Complyo
# Advanced security, rate limiting, and SSL termination

# CORS Origin Mapping
map $http_origin $cors_origin {
    default "";
    "~^https://app\.complyo\.tech$" "$http_origin";
    "~^https://complyo\.tech$" "$http_origin";
    "~^https://www\.complyo\.tech$" "$http_origin";
}

# Rate limiting zones - different limits for different endpoint types
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=analyze_limit:10m rate=3r/s;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

# Backend upstream with health checks
upstream complyo_backend {
    server complyo-backend-direct:8002 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# Security headers map for reuse
map $status $security_headers {
    default "always";
    ~^[45] "always";
}

# HTTP to HTTPS redirect for API domain
server {
    listen 80;
    server_name api.complyo.tech;
    
    # Security headers even for redirects
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    
    return 301 https://$server_name$request_uri;
}

# Main HTTPS API server
server {
    listen 443 ssl http2;
    server_name api.complyo.tech;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/api.complyo.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.complyo.tech/privkey.pem;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' https:; frame-ancestors 'self';" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=()" always;
    
    # Connection limits
    limit_conn conn_limit_per_ip 10;
    
    # Rate limiting for authentication endpoints
    location ~ ^/api/(auth|login|register) {
        limit_req zone=auth_limit burst=10 nodelay;
        limit_req_status 429;
        
        include /etc/nginx/cors_config;
        include /etc/nginx/proxy_config;
    }
    
    # Rate limiting for analysis endpoints (more restrictive)
    location /api/analyze {
        limit_req zone=analyze_limit burst=5 nodelay;
        limit_req_status 429;
        
        include /etc/nginx/cors_config;
        include /etc/nginx/proxy_config;
    }
    
    # Health check endpoint (no rate limiting)
    location /health {
        access_log off;
        proxy_pass http://complyo_backend/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Documentation endpoints (light rate limiting)
    location ~ ^/(docs|redoc) {
        # Only allow in development/staging
        if ($ssl_client_verify != SUCCESS) {
            return 404;
        }
        
        limit_req zone=api_limit burst=20 nodelay;
        include /etc/nginx/proxy_config;
    }
    
    # Default API endpoints
    location / {
        limit_req zone=api_limit burst=20 nodelay;
        limit_req_status 429;
        
        include /etc/nginx/cors_config;
        include /etc/nginx/proxy_config;
    }
    
    # Error pages
    error_page 429 /rate-limit-exceeded.json;
    location = /rate-limit-exceeded.json {
        internal;
        add_header Content-Type application/json always;
        return 429 '{"error": "Rate limit exceeded", "message": "Too many requests. Please try again later.", "code": 429}';
    }
    
    error_page 502 503 504 /api-unavailable.json;
    location = /api-unavailable.json {
        internal;
        add_header Content-Type application/json always;
        return 503 '{"error": "Service temporarily unavailable", "message": "API is currently unavailable. Please try again later.", "code": 503}';
    }
}

# Additional server block for monitoring (internal only)
server {
    listen 127.0.0.1:8080;
    server_name localhost;
    
    location /nginx-status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
    
    location /nginx-health {
        return 200 "healthy\n";
        add_header Content-Type text/plain;
        access_log off;
    }
}