version: '3.8'

networks:
  complyo-network:
    driver: bridge
  shared-network:
    external: true

services:
  complyo-backend-direct:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: complyo-backend-direct
    restart: unless-stopped
    ports:
      - "8002:8002"
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://complyo_user:ComplYo2025SecurePass@shared-postgres:5432/complyo_db
      - REDIS_HOST=shared-redis
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
    networks:
      - complyo-network
      - shared-network
    depends_on:
      - shared-postgres
      - shared-redis
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  complyo-dashboard:
    build:
      context: ./dashboard-react
      dockerfile: Dockerfile
    container_name: complyo-dashboard
    restart: unless-stopped
    ports:
      - "3000:3002"  # Dashboard läuft intern auf 3002
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.complyo.tech
    networks:
      - complyo-network
    depends_on:
      - complyo-backend-direct

  complyo-landing:
    build:
      context: ./landing-react
      dockerfile: Dockerfile
    container_name: complyo-landing
    restart: unless-stopped
    ports:
      - "3001:3000"  # Landing läuft intern auf 3000
    environment:
      - NODE_ENV=production
    networks:
      - complyo-network

  complyo-gateway:
    build:
      context: ./gateway
    container_name: complyo-gateway
    restart: unless-stopped
    ports:
      - "8080:80"
    networks:
      - complyo-network
    depends_on:
      - complyo-backend-direct
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf:ro

  # Temporärer direkter nginx für Port 80/443
  complyo-proxy:
    image: nginx:alpine
    container_name: complyo-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./proxy-config:/etc/nginx/conf.d
      - ./ssl-certs:/etc/nginx/ssl
    networks:
      - complyo-network
    depends_on:
      - complyo-dashboard
      - complyo-landing
      - complyo-gateway

  shared-postgres:
    image: postgres:15-alpine
    container_name: shared-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=complyo_db
      - POSTGRES_USER=complyo_user
      - POSTGRES_PASSWORD=ComplYo2025SecurePass
    networks:
      - shared-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d

  shared-redis:
    image: redis:7-alpine
    container_name: shared-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - shared-network
    volumes:
      - redis_data:/data
    # Redis ohne Passwort für lokale Umgebung
    command: redis-server --appendonly yes --requirepass ""

volumes:
  postgres_data:
  redis_data:
