# HTTP zu HTTPS Redirect
server {
    listen 80;
    server_name complyo.tech app.complyo.tech api.complyo.tech;
    return 301 https://$server_name$request_uri;
}

# HTTPS - Landing Page (complyo.tech)
server {
    listen 443 ssl;
    server_name complyo.tech;
    
    ssl_certificate /etc/letsencrypt/live/complyo.tech-0001/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/complyo.tech-0001/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    
    location / {
        proxy_pass http://complyo-landing:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $host;
    }
}

# HTTPS - Dashboard (app.complyo.tech)
server {
    listen 443 ssl;
    server_name app.complyo.tech;
    
    ssl_certificate /etc/letsencrypt/live/complyo.tech-0001/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/complyo.tech-0001/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    
    location / {
        proxy_pass http://complyo-dashboard:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $host;
        
        # WebSocket support für Next.js Development
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

# HTTPS - API (api.complyo.tech)
server {
    listen 443 ssl;
    server_name api.complyo.tech;
    
    ssl_certificate /etc/letsencrypt/live/complyo.tech-0001/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/complyo.tech-0001/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    
    location / {
        proxy_pass http://complyo-backend:8002;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $host;
        
        # CORS für API
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type' always;
    }
}
